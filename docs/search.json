{"Structs/StorageError.html#/s:7Storage0A5ErrorV10identifierSSvp":{"name":"identifier","abstract":"<p>A unique, machine readable, identifier for this error.</p>","parent_name":"StorageError"},"Structs/StorageError.html#/s:7Storage0A5ErrorV6reasonSSvp":{"name":"reason","abstract":"<p>A human readable message that describes the reason for the error.</p>","parent_name":"StorageError"},"Structs/StorageError.html#/s:7Storage0A5ErrorV10identifier6reasonACSS_SStcfc":{"name":"init(identifier:reason:)","abstract":"<p>Creates a new <code>StorageError</code> instance.</p>","parent_name":"StorageError"},"Structs/LocalStorage.html#/s:7Storage05LocalA0V11makeService3forAC0D09Container_p_tKFZ":{"name":"makeService(for:)","abstract":"<p>See <code>ServiceType.makeService(for:)</code>.</p>","parent_name":"LocalStorage"},"Structs/LocalStorage.html#/s:7Storage05LocalA0V6worker3NIO14EventLoopGroup_pvp":{"name":"worker","abstract":"<p>The event loop group that the service lives on.</p>","parent_name":"LocalStorage"},"Structs/LocalStorage.html#/s:7Storage05LocalA0V11defaultPathSSSgvp":{"name":"defaultPath","abstract":"<p>The default path to store files to if no path is passed in.</p>","parent_name":"LocalStorage"},"Structs/LocalStorage.html#/s:7Storage05LocalA0V6worker7manager11defaultPath4poolAC3NIO14EventLoopGroup_p_So13NSFileManagerCSSSgAH20BlockingIOThreadPoolCtcfc":{"name":"init(worker:manager:defaultPath:pool:)","abstract":"<p>Creates a new <code>LocalStorage</code> intance.</p>","parent_name":"LocalStorage"},"Structs/LocalStorage.html#/s:7Storage05LocalA0V5store4file2at3NIO15EventLoopFutureCySSG4Core4FileV_SSSgtF":{"name":"store(file:at:)","abstract":"<p>See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Storage.html#/s:7StorageAAP5store4file2at3NIO15EventLoopFutureCySSG4Core4FileV_SSSgtF\">Storage.store(file:at:)</a></code>.</p>","parent_name":"LocalStorage"},"Structs/LocalStorage.html#/s:7Storage05LocalA0V5fetch4file3NIO15EventLoopFutureCy4Core4FileVGSS_tF":{"name":"fetch(file:)","abstract":"<p>See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Storage.html#/s:7StorageAAP5fetch4file3NIO15EventLoopFutureCy4Core4FileVGSS_tF\">Storage.fetch(file:)</a></code>.</p>","parent_name":"LocalStorage"},"Structs/LocalStorage.html#/s:7Storage05LocalA0V5write4file4with7options3NIO15EventLoopFutureCy4Core4FileVGSS_10Foundation4DataVSo20NSDataWritingOptionsVtF":{"name":"write(file:with:options:)","abstract":"<p>See <code>Storage.write(file:data:options:)</code>.</p>","parent_name":"LocalStorage"},"Structs/LocalStorage.html#/s:7Storage05LocalA0V6delete4file3NIO15EventLoopFutureCyytGSS_tF":{"name":"delete(file:)","abstract":"<p>See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Storage.html#/s:7StorageAAP6delete4file3NIO15EventLoopFutureCyytGSS_tF\">Storage.delete(file:)</a></code>.</p>","parent_name":"LocalStorage"},"Structs/LocalStorage.html":{"name":"LocalStorage","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Storage.html\">Storage</a></code> implementation that handles local file storage.</p>"},"Structs/StorageError.html":{"name":"StorageError","abstract":"<p>The error type that is thrown when a storage operation fails.</p>"},"Protocols/Storage.html#/s:7StorageAAP5store4file2at3NIO15EventLoopFutureCySSG4Core4FileV_SSSgtF":{"name":"store(file:at:)","abstract":"<p>Stores a new file at a given path.</p>","parent_name":"Storage"},"Protocols/Storage.html#/s:7StorageAAP5fetch4file3NIO15EventLoopFutureCy4Core4FileVGSS_tF":{"name":"fetch(file:)","abstract":"<p>Gets file data from a path or URL.</p>","parent_name":"Storage"},"Protocols/Storage.html#/s:7StorageAAP5write4file4with7options3NIO15EventLoopFutureCy4Core4FileVGSS_10Foundation4DataVSo20NSDataWritingOptionsVtF":{"name":"write(file:with:options:)","abstract":"<p>Writes new data to a file.</p>","parent_name":"Storage"},"Protocols/Storage.html#/s:7StorageAAP6delete4file3NIO15EventLoopFutureCyytGSS_tF":{"name":"delete(file:)","abstract":"<p>Deletes a file.</p>","parent_name":"Storage"},"Protocols/Storage.html":{"name":"Storage","abstract":"<p>A type that can store and fetch resources using an underlying API, such as Google Cloud Storage of Foundation&rsquo;s <code>FileManager</code>.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}